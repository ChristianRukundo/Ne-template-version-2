{
    "openapi": "3.0.0",
    "info": {
        "title": "Parking Management System - Vehicles & Profile API",
        "description": "API documentation for managing user vehicles and user profiles.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:5000/api/v1",
            "description": "Development server"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "User Profile",
            "description": "Management of the authenticated user's own profile"
        },
        {
            "name": "Vehicles",
            "description": "Management of user vehicles"
        }
    ],
    "paths": {
        "/users/profile": {
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update current authenticated user's profile",
                "operationId": "updateUserProfile",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserMinimumResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicles": {
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Add a new vehicle",
                "description": "Adds a new vehicle to the authenticated user's account. Requires 'manage_own_vehicles' permission.",
                "operationId": "addVehicle",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "List my vehicles",
                "description": "Retrieves a paginated list of vehicles belonging to the authenticated user. Requires 'list_own_vehicles' permission.",
                "operationId": "listMyVehicles",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParam"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by plate number or vehicle type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort vehicles by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "plate_number",
                                "vehicle_type",
                                "size",
                                "created_at"
                            ],
                            "default": "created_at"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the user's vehicles.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicles/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/IdPathParam"
                }
            ],
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Get my vehicle by ID",
                "description": "Retrieves a specific vehicle owned by the authenticated user. Requires 'manage_own_vehicles' permission.",
                "operationId": "getMyVehicleById",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Update my vehicle by ID",
                "description": "Updates a specific vehicle owned by the authenticated user. Requires 'manage_own_vehicles' permission.",
                "operationId": "updateMyVehicle",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Delete my vehicle by ID",
                "description": "Deletes a specific vehicle owned by the authenticated user. Requires 'manage_own_vehicles' permission.",
                "operationId": "deleteMyVehicle",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error description"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "Pagination": {
                "type": "object",
                "properties": {
                    "currentPage": {
                        "type": "integer",
                        "example": 1
                    },
                    "totalPages": {
                        "type": "integer",
                        "example": 5
                    },
                    "totalItems": {
                        "type": "integer",
                        "example": 42
                    },
                    "itemsPerPage": {
                        "type": "integer",
                        "example": 10
                    }
                }
            },
            "UserMinimumResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ],
                        "example": "USER"
                    }
                }
            },
            "UpdateProfileRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Johnathan Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe.new@example.com"
                    },
                    "currentPassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Required if newPassword is provided",
                        "example": "OldSecureP@ss123"
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "password",
                        "description": "New password (optional)",
                        "example": "NewSecureP@ss456"
                    }
                }
            },
            "Vehicle": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "plate_number": {
                        "type": "string",
                        "example": "XYZ-123"
                    },
                    "vehicle_type": {
                        "type": "string",
                        "enum": [
                            "CAR",
                            "MOTORCYCLE",
                            "TRUCK",
                            "BICYCLE"
                        ],
                        "example": "CAR"
                    },
                    "size": {
                        "type": "string",
                        "enum": [
                            "SMALL",
                            "MEDIUM",
                            "LARGE",
                            "EXTRA_LARGE"
                        ],
                        "example": "MEDIUM"
                    },
                    "other_attributes": {
                        "type": "object",
                        "nullable": true,
                        "example": {
                            "color": "Red",
                            "model": "Sedan X"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateVehicleRequest": {
                "type": "object",
                "required": [
                    "plate_number",
                    "vehicle_type",
                    "size"
                ],
                "properties": {
                    "plate_number": {
                        "type": "string",
                        "example": "NEW-CAR-01",
                        "description": "Unique plate number (3-15 chars, A-Z, 0-9, -)"
                    },
                    "vehicle_type": {
                        "type": "string",
                        "enum": [
                            "CAR",
                            "MOTORCYCLE",
                            "TRUCK",
                            "BICYCLE"
                        ],
                        "example": "CAR"
                    },
                    "size": {
                        "type": "string",
                        "enum": [
                            "SMALL",
                            "MEDIUM",
                            "LARGE",
                            "EXTRA_LARGE"
                        ],
                        "example": "MEDIUM"
                    },
                    "other_attributes": {
                        "type": "object",
                        "nullable": true,
                        "description": "JSON object for additional details like color, model",
                        "example": {
                            "color": "Blue"
                        }
                    }
                }
            },
            "UpdateVehicleRequest": {
                "type": "object",
                "properties": {
                    "plate_number": {
                        "type": "string",
                        "example": "UPDATED-01",
                        "description": "Unique plate number (3-15 chars, A-Z, 0-9, -)"
                    },
                    "vehicle_type": {
                        "type": "string",
                        "enum": [
                            "CAR",
                            "MOTORCYCLE",
                            "TRUCK",
                            "BICYCLE"
                        ],
                        "example": "MOTORCYCLE"
                    },
                    "size": {
                        "type": "string",
                        "enum": [
                            "SMALL",
                            "MEDIUM",
                            "LARGE",
                            "EXTRA_LARGE"
                        ],
                        "example": "SMALL"
                    },
                    "other_attributes": {
                        "type": "object",
                        "nullable": true,
                        "example": {
                            "color": "Black",
                            "make": "Yamaha"
                        }
                    }
                }
            },
            "VehicleListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Vehicle"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            }
        },
        "parameters": {
            "IdPathParam": {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "Identifier of the resource",
                "schema": {
                    "type": "string"
                }
            },
            "PageQueryParam": {
                "name": "page",
                "in": "query",
                "description": "Page number for pagination",
                "schema": {
                    "type": "integer",
                    "default": 1,
                    "minimum": 1
                }
            },
            "LimitQueryParam": {
                "name": "limit",
                "in": "query",
                "description": "Number of items per page",
                "schema": {
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "OrderQueryParam": {
                "name": "order",
                "in": "query",
                "description": "Sort order",
                "schema": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc"
                }
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Unauthorized. Token is missing or invalid.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "ForbiddenError": {
                "description": "Forbidden. User does not have permission for this action.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "NotFoundError": {
                "description": "Resource not found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "BadRequestError": {
                "description": "Bad Request. Invalid input data.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal Server Error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            }
        }
    }
}