{
    "openapi": "3.0.0",
    "info": {
        "title": "Parking Management System - Admin API",
        "description": "API documentation for Administrator functionalities.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:5000/api/v1",
            "description": "Development server"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Admin - User Management",
            "description": "User management endpoints for administrators"
        },
        {
            "name": "Admin - Roles & Permissions",
            "description": "Viewing roles and permissions (for administrators)"
        },
        {
            "name": "Admin - Audit Logs",
            "description": "Viewing system audit logs (for administrators)"
        }
    ],
    "paths": {
        "/admin/users": {
            "get": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "List all users",
                "description": "Retrieves a paginated list of all users. Requires ADMIN role and 'manage_all_users' permission.",
                "operationId": "adminGetAllUsers",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/SearchQueryParamUsers"
                    },
                    {
                        "$ref": "#/components/parameters/SortByQueryParamUsers"
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by user role name (e.g., USER, ADMIN)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "USER",
                                "ADMIN"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminUserListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user. Requires ADMIN role and 'manage_all_users' permission.",
                "operationId": "adminCreateUser",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCreateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/AdminUserResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/IdPathParam"
                }
            ],
            "get": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Get user by ID",
                "description": "Retrieves a specific user by their ID. Requires ADMIN role and 'manage_all_users' permission.",
                "operationId": "adminGetUserById",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specific user details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Update user by ID",
                "description": "Updates a specific user's details. Requires ADMIN role and 'manage_all_users' permission.",
                "operationId": "adminUpdateUser",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminUpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/AdminUserResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Delete user by ID",
                "description": "Deletes a specific user. Requires ADMIN role and 'manage_all_users' permission.",
                "operationId": "adminDeleteUser",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/roles": {
            "get": {
                "tags": [
                    "Admin - Roles & Permissions"
                ],
                "summary": "List all roles",
                "description": "Retrieves a list of all available roles in the system. Requires ADMIN role.",
                "operationId": "adminGetAllRoles",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of roles.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/permissions": {
            "get": {
                "tags": [
                    "Admin - Roles & Permissions"
                ],
                "summary": "List all permissions",
                "description": "Retrieves a list of all available permissions in the system. Requires ADMIN role.",
                "operationId": "adminGetAllPermissions",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PermissionResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/logs": {
            "get": {
                "tags": [
                    "Admin - Audit Logs"
                ],
                "summary": "List audit logs",
                "description": "Retrieves a paginated list of system audit logs. Requires ADMIN role and 'view_audit_logs' permission.",
                "operationId": "adminGetAuditLogs",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParamLogs"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParamLogs"
                    },
                    {
                        "$ref": "#/components/parameters/SortByQueryParamLogs"
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Filter logs by User ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "actionContains",
                        "in": "query",
                        "description": "Filter logs where action description contains this text (case-insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "Filter logs by entity type (e.g., User, Vehicle, ParkingSlot, SlotRequest)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityId",
                        "in": "query",
                        "description": "Filter logs by specific entity ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Filter logs from this date (ISO 8601 format, e.g., 2023-01-01)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Filter logs up to this date (ISO 8601 format, e.g., 2023-12-31)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audit logs.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error description"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "Pagination": {
                "type": "object",
                "properties": {
                    "currentPage": {
                        "type": "integer",
                        "example": 1
                    },
                    "totalPages": {
                        "type": "integer",
                        "example": 5
                    },
                    "totalItems": {
                        "type": "integer",
                        "example": 42
                    },
                    "itemsPerPage": {
                        "type": "integer",
                        "example": 10
                    }
                }
            },
            "UserBase": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    }
                }
            },
            "AdminUserResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UserBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "email_verified": {
                                "type": "boolean",
                                "example": true
                            },
                            "role": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                                    },
                                    "name": {
                                        "type": "string",
                                        "enum": [
                                            "USER",
                                            "ADMIN"
                                        ],
                                        "example": "ADMIN"
                                    }
                                }
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "AdminUserListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminUserResponse"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "AdminCreateUserRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Jane Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "jane.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "SecurePassword123!"
                    },
                    "roleName": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ],
                        "example": "USER",
                        "description": "Defaults to USER if not provided"
                    }
                }
            },
            "AdminUpdateUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Jane Smith"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "jane.smith@example.com"
                    },
                    "roleName": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ],
                        "example": "USER"
                    },
                    "email_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Set a new password for the user (optional)",
                        "example": "NewSecurePass!456"
                    }
                }
            },
            "RoleResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                    },
                    "name": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ],
                        "example": "ADMIN"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Administrator with full access"
                    }
                }
            },
            "PermissionResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                    },
                    "name": {
                        "type": "string",
                        "example": "manage_all_users"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Can create, read, update, delete all users"
                    }
                }
            },
            "AuditLogUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin User"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@parkingsystem.com"
                    }
                }
            },
            "AuditLogResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "ID of the user performing the action (null for system actions)"
                    },
                    "user": {
                        "$ref": "#/components/schemas/AuditLogUser",
                        "nullable": true
                    },
                    "action": {
                        "type": "string",
                        "example": "Admin created user: new@example.com"
                    },
                    "entity_type": {
                        "type": "string",
                        "nullable": true,
                        "example": "User"
                    },
                    "entity_id": {
                        "type": "integer",
                        "nullable": true,
                        "example": 5
                    },
                    "details": {
                        "type": "object",
                        "nullable": true,
                        "description": "Additional JSON details",
                        "example": {
                            "role": "USER"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuditLogListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogResponse"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            }
        },
        "parameters": {
            "IdPathParam": {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "Identifier of the resource",
                "schema": {
                    "type": "string"
                }
            },
            "PageQueryParam": {
                "name": "page",
                "in": "query",
                "description": "Page number for pagination",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 1,
                    "minimum": 1
                }
            },
            "PageQueryParamLogs": {
                "name": "page",
                "in": "query",
                "description": "Page number for pagination",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 1,
                    "minimum": 1
                }
            },
            "LimitQueryParam": {
                "name": "limit",
                "in": "query",
                "description": "Number of items per page",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "LimitQueryParamLogs": {
                "name": "limit",
                "in": "query",
                "description": "Number of items per page for logs",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 20,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "SearchQueryParamUsers": {
                "name": "search",
                "in": "query",
                "description": "Search term for users (name or email)",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "SortByQueryParamUsers": {
                "name": "sortBy",
                "in": "query",
                "description": "Field to sort users by",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "name",
                        "email",
                        "role",
                        "created_at"
                    ],
                    "default": "created_at"
                }
            },
            "SortByQueryParamLogs": {
                "name": "sortBy",
                "in": "query",
                "description": "Field to sort logs by",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "timestamp",
                        "action",
                        "entity_type",
                        "user_id"
                    ],
                    "default": "timestamp"
                }
            },
            "OrderQueryParam": {
                "name": "order",
                "in": "query",
                "description": "Sort order",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc"
                }
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Unauthorized. Token is missing or invalid.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "ForbiddenError": {
                "description": "Forbidden. User does not have permission for this action.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "NotFoundError": {
                "description": "Resource not found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "BadRequestError": {
                "description": "Bad Request. Invalid input data.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal Server Error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            }
        }
    }
}