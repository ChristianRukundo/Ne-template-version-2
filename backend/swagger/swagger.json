{
    "openapi": "3.0.0",
    "info": {
        "title": "Parking Management System API - Full Documentation",
        "description": "Comprehensive API documentation for the Vehicle Parking Management System backend.",
        "version": "1.0.0",
        "contact": {
            "name": "Parking System Support",
            "email": "support@parkingsystem.example.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3000/api",
            "description": "Development Server"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and access management"
        },
        {
            "name": "User Profile",
            "description": "Management of the authenticated user's own profile"
        },
        {
            "name": "Admin - User Management",
            "description": "User management endpoints for administrators"
        },
        {
            "name": "Admin - Roles & Permissions",
            "description": "Viewing roles and permissions"
        },
        {
            "name": "Admin - Audit Logs",
            "description": "Viewing system audit logs"
        },
        {
            "name": "Vehicles",
            "description": "Management of user vehicles"
        },
        {
            "name": "Parking Slots",
            "description": "Management and viewing of parking slots"
        },
        {
            "name": "Slot Requests",
            "description": "Requesting parking slots and managing requests"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully. Verification email sent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user's email address",
                "operationId": "verifyEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "logoutUser",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current authenticated user",
                "operationId": "getCurrentUser",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current user details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset OTP",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset OTP request acknowledged.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password using OTP",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/users/profile": {
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update current authenticated user's profile",
                "operationId": "updateUserProfile",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserMinimumResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "List all users",
                "operationId": "adminGetAllUsers",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/SearchQueryParamUsers"
                    },
                    {
                        "$ref": "#/components/parameters/SortByQueryParamUsers"
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by user role name (e.g., USER, ADMIN)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "USER",
                                "ADMIN"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminUserListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Create a new user",
                "operationId": "adminCreateUser",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCreateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/AdminUserResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/IdPathParamUuid"
                }
            ],
            "get": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Get user by ID",
                "operationId": "adminGetUserById",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specific user details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Update user by ID",
                "operationId": "adminUpdateUser",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminUpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/AdminUserResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Delete user by ID",
                "operationId": "adminDeleteUser",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/roles": {
            "get": {
                "tags": [
                    "Admin - Roles & Permissions"
                ],
                "summary": "List all roles",
                "operationId": "adminGetAllRoles",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of roles.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/permissions": {
            "get": {
                "tags": [
                    "Admin - Roles & Permissions"
                ],
                "summary": "List all permissions",
                "operationId": "adminGetAllPermissions",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PermissionResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/admin/logs": {
            "get": {
                "tags": [
                    "Admin - Audit Logs"
                ],
                "summary": "List audit logs",
                "operationId": "adminGetAuditLogs",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParamLogs"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParamLogs"
                    },
                    {
                        "$ref": "#/components/parameters/SortByQueryParamLogs"
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Filter logs by User UUID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "actionContains",
                        "in": "query",
                        "description": "Filter logs where action description contains text",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "Filter logs by entity type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityId",
                        "in": "query",
                        "description": "Filter logs by specific entity UUID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Filter logs from date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Filter logs up to date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audit logs.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicles": {
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Add a new vehicle",
                "operationId": "addVehicle",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "List my vehicles",
                "operationId": "listMyVehicles",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParam"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by plate number or vehicle type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort vehicles by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "plate_number",
                                "vehicle_type",
                                "size",
                                "created_at"
                            ],
                            "default": "created_at"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the user's vehicles.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicles/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/IdPathParamUuid"
                }
            ],
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Get my vehicle by ID",
                "operationId": "getMyVehicleById",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Update my vehicle by ID",
                "operationId": "updateMyVehicle",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Delete my vehicle by ID",
                "operationId": "deleteMyVehicle",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/parking-slots": {
            "post": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Create a parking slot (Admin)",
                "operationId": "createParkingSlot",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateParkingSlotRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parking slot created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "slot": {
                                            "$ref": "#/components/schemas/ParkingSlot"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "get": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "List parking slots (Admin/User)",
                "operationId": "listParkingSlots",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParam"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by slot number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "slot_number",
                                "size",
                                "vehicle_type",
                                "status",
                                "location",
                                "created_at"
                            ],
                            "default": "slot_number"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ParkingSlotStatusEnum"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Filter by size",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/VehicleSizeEnum"
                        }
                    },
                    {
                        "name": "vehicle_type",
                        "in": "query",
                        "description": "Filter by vehicle type",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/VehicleTypeEnum"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Filter by location",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/SlotLocationEnum"
                        }
                    },
                    {
                        "name": "showAll",
                        "in": "query",
                        "description": "Admin flag to show all slots",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of parking slots.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlotListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/parking-slots/bulk": {
            "post": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Bulk create parking slots (Admin)",
                "operationId": "bulkCreateParkingSlots",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCreateParkingSlotsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Slots created via bulk.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/parking-slots/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/IdPathParamUuid"
                }
            ],
            "get": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Get parking slot by ID",
                "operationId": "getParkingSlotById",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Slot details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlot"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Update parking slot (Admin)",
                "operationId": "updateParkingSlot",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateParkingSlotRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Slot updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "slot": {
                                            "$ref": "#/components/schemas/ParkingSlot"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Delete parking slot (Admin)",
                "operationId": "deleteParkingSlot",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Slot deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/slot-requests": {
            "post": {
                "tags": [
                    "Slot Requests"
                ],
                "summary": "Create a slot request (User)",
                "operationId": "createSlotRequest",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSlotRequestRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Request created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "request": {
                                            "$ref": "#/components/schemas/SlotRequestResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "get": {
                "tags": [
                    "Slot Requests"
                ],
                "summary": "List slot requests (User/Admin)",
                "operationId": "listSlotRequests",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParam"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by vehicle plate (user) or user details (admin)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "requested_at",
                                "resolved_at",
                                "vehicle_plate",
                                "user_name",
                                "created_at"
                            ],
                            "default": "created_at"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/SlotRequestStatusEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of slot requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlotRequestListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/slot-requests/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/IdPathParamUuid"
                }
            ],
            "put": {
                "tags": [
                    "Slot Requests"
                ],
                "summary": "Update my pending slot request (User)",
                "operationId": "updateMySlotRequest",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMySlotRequestRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "request": {
                                            "$ref": "#/components/schemas/SlotRequestResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/slot-requests/{id}/resolve": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/IdPathParamUuid"
                }
            ],
            "patch": {
                "tags": [
                    "Slot Requests"
                ],
                "summary": "Approve or Reject a slot request (Admin)",
                "operationId": "resolveSlotRequest",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResolveSlotRequestRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request resolved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "request": {
                                            "$ref": "#/components/schemas/SlotRequestResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error description"
                    }
                }
            },
            "Pagination": {
                "type": "object",
                "properties": {
                    "currentPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    },
                    "itemsPerPage": {
                        "type": "integer"
                    }
                }
            },
            "RegisterRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "VerifyEmailRequest": {
                "type": "object",
                "required": [
                    "email",
                    "code"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "code": {
                        "type": "string"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "LoginSuccessResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimumResponse"
                    }
                }
            },
            "UserMinimumResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ]
                    }
                }
            },
            "CurrentUserResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UserMinimumResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "email_verified": {
                                "type": "boolean"
                            },
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "ForgotPasswordRequest": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                }
            },
            "ResetPasswordRequest": {
                "type": "object",
                "required": [
                    "email",
                    "otp_code",
                    "newPassword"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "otp_code": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "UpdateProfileRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "currentPassword": {
                        "type": "string",
                        "format": "password"
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "AdminUserResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UserMinimumResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "email_verified": {
                                "type": "boolean"
                            },
                            "role": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name": {
                                        "type": "string",
                                        "enum": [
                                            "USER",
                                            "ADMIN"
                                        ]
                                    }
                                }
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "AdminUserListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminUserResponse"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "AdminCreateUserRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "roleName": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ],
                        "default": "USER"
                    }
                }
            },
            "AdminUpdateUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "roleName": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ]
                    },
                    "email_verified": {
                        "type": "boolean"
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "RoleResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PermissionResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AuditLogUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                }
            },
            "AuditLogResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/AuditLogUser",
                        "nullable": true
                    },
                    "action": {
                        "type": "string"
                    },
                    "entity_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "entity_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "details": {
                        "type": "object",
                        "nullable": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuditLogListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogResponse"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "VehicleTypeEnum": {
                "type": "string",
                "enum": [
                    "CAR",
                    "MOTORCYCLE",
                    "TRUCK",
                    "BICYCLE"
                ]
            },
            "VehicleSizeEnum": {
                "type": "string",
                "enum": [
                    "SMALL",
                    "MEDIUM",
                    "LARGE",
                    "EXTRA_LARGE"
                ]
            },
            "ParkingSlotStatusEnum": {
                "type": "string",
                "enum": [
                    "AVAILABLE",
                    "UNAVAILABLE",
                    "MAINTENANCE"
                ]
            },
            "SlotLocationEnum": {
                "type": "string",
                "enum": [
                    "NORTH_WING",
                    "SOUTH_WING",
                    "EAST_WING",
                    "WEST_WING",
                    "LEVEL_1",
                    "LEVEL_2"
                ],
                "nullable": true
            },
            "SlotRequestStatusEnum": {
                "type": "string",
                "enum": [
                    "PENDING",
                    "APPROVED",
                    "REJECTED",
                    "CANCELLED"
                ]
            },
            "Vehicle": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "plate_number": {
                        "type": "string"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    },
                    "other_attributes": {
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateVehicleRequest": {
                "type": "object",
                "required": [
                    "plate_number",
                    "vehicle_type",
                    "size"
                ],
                "properties": {
                    "plate_number": {
                        "type": "string"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    },
                    "other_attributes": {
                        "type": "object",
                        "nullable": true
                    }
                }
            },
            "UpdateVehicleRequest": {
                "type": "object",
                "properties": {
                    "plate_number": {
                        "type": "string"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    },
                    "other_attributes": {
                        "type": "object",
                        "nullable": true
                    }
                }
            },
            "VehicleListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Vehicle"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ParkingSlot": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slot_number": {
                        "type": "string"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ParkingSlotStatusEnum"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateParkingSlotRequest": {
                "type": "object",
                "required": [
                    "slot_number",
                    "size",
                    "vehicle_type"
                ],
                "properties": {
                    "slot_number": {
                        "type": "string"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ParkingSlotStatusEnum",
                        "default": "AVAILABLE"
                    }
                }
            },
            "UpdateParkingSlotRequest": {
                "type": "object",
                "properties": {
                    "slot_number": {
                        "type": "string"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ParkingSlotStatusEnum"
                    }
                }
            },
            "BulkCreateParkingSlotsRequest": {
                "type": "object",
                "required": [
                    "count",
                    "size",
                    "vehicle_type"
                ],
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "prefix": {
                        "type": "string",
                        "default": "PS"
                    },
                    "startNumber": {
                        "type": "integer",
                        "default": 1
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum"
                    }
                }
            },
            "ParkingSlotListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParkingSlot"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "UserMinimumForRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                }
            },
            "VehicleMinimumForRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "plate_number": {
                        "type": "string"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    }
                }
            },
            "ParkingSlotMinimumForRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slot_number": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum"
                    }
                }
            },
            "SlotRequestResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimumForRequest"
                    },
                    "vehicle_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "vehicle": {
                        "$ref": "#/components/schemas/VehicleMinimumForRequest"
                    },
                    "parking_slot_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "parking_slot": {
                        "$ref": "#/components/schemas/ParkingSlotMinimumForRequest",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/SlotRequestStatusEnum"
                    },
                    "admin_notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "requested_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "resolved_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateSlotRequestRequest": {
                "type": "object",
                "required": [
                    "vehicle_id"
                ],
                "properties": {
                    "vehicle_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "UpdateMySlotRequestRequest": {
                "type": "object",
                "properties": {
                    "vehicle_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CANCELLED"
                        ]
                    }
                },
                "minProperties": 1
            },
            "ResolveSlotRequestRequest": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "APPROVED",
                            "REJECTED"
                        ]
                    },
                    "admin_notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "parking_slot_id_manual": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                }
            },
            "SlotRequestListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SlotRequestResponse"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            }
        },
        "parameters": {
            "IdPathParamUuid": {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "UUID Identifier of the resource",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "PageQueryParam": {
                "name": "page",
                "in": "query",
                "description": "Page number",
                "schema": {
                    "type": "integer",
                    "default": 1
                }
            },
            "LimitQueryParam": {
                "name": "limit",
                "in": "query",
                "description": "Items per page",
                "schema": {
                    "type": "integer",
                    "default": 10
                }
            },
            "OrderQueryParam": {
                "name": "order",
                "in": "query",
                "description": "Sort order",
                "schema": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc"
                }
            },
            "SearchQueryParamUsers": {
                "name": "search",
                "in": "query",
                "description": "Search users",
                "schema": {
                    "type": "string"
                }
            },
            "SortByQueryParamUsers": {
                "name": "sortBy",
                "in": "query",
                "description": "Sort users by",
                "schema": {
                    "type": "string",
                    "enum": [
                        "name",
                        "email",
                        "role",
                        "created_at"
                    ],
                    "default": "created_at"
                }
            },
            "PageQueryParamLogs": {
                "name": "page",
                "in": "query",
                "description": "Page for logs",
                "schema": {
                    "type": "integer",
                    "default": 1
                }
            },
            "LimitQueryParamLogs": {
                "name": "limit",
                "in": "query",
                "description": "Limit for logs",
                "schema": {
                    "type": "integer",
                    "default": 20
                }
            },
            "SortByQueryParamLogs": {
                "name": "sortBy",
                "in": "query",
                "description": "Sort logs by",
                "schema": {
                    "type": "string",
                    "enum": [
                        "timestamp",
                        "action",
                        "entity_type",
                        "user_id"
                    ],
                    "default": "timestamp"
                }
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "ForbiddenError": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "NotFoundError": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "BadRequestError": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            }
        }
    }
}