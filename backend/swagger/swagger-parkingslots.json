{
    "openapi": "3.0.0",
    "info": {
        "title": "Parking Management System - Parking Slots API",
        "description": "API documentation for managing and viewing parking slots.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:5000/api/v1",
            "description": "Development server"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Parking Slots",
            "description": "Management and viewing of parking slots"
        }
    ],
    "paths": {
        "/parking-slots": {
            "post": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Create a parking slot (Admin)",
                "description": "Creates a new parking slot. Requires ADMIN role and 'manage_parking_slots' permission.",
                "operationId": "createParkingSlot",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateParkingSlotRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parking slot created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "slot": {
                                            "$ref": "#/components/schemas/ParkingSlot"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "get": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "List parking slots (Admin/User)",
                "description": "Retrieves a paginated list of parking slots. Admins can see all, Users primarily see available slots. Requires 'view_all_parking_slots' (Admin) or 'view_available_parking_slots' (User) permission.",
                "operationId": "listParkingSlots",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PageQueryParam"
                    },
                    {
                        "$ref": "#/components/parameters/LimitQueryParam"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by slot number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort slots by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "slot_number",
                                "size",
                                "vehicle_type",
                                "status",
                                "location",
                                "created_at"
                            ],
                            "default": "slot_number"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/OrderQueryParam"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by parking slot status",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ParkingSlotStatusEnum"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Filter by vehicle size",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/VehicleSizeEnum"
                        }
                    },
                    {
                        "name": "vehicle_type",
                        "in": "query",
                        "description": "Filter by vehicle type",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/VehicleTypeEnum"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Filter by slot location",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/SlotLocationEnum"
                        }
                    },
                    {
                        "name": "showAll",
                        "in": "query",
                        "description": "Admin flag (true/false) to override default filtering for users. If true & user is admin, all slots are shown based on other filters. If user is not admin, this only works if 'status' is also 'AVAILABLE'.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of parking slots.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlotListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/parking-slots/bulk": {
            "post": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Bulk create parking slots (Admin)",
                "description": "Creates multiple parking slots based on a count, prefix, and default properties. Requires ADMIN role and 'manage_parking_slots' permission.",
                "operationId": "bulkCreateParkingSlots",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCreateParkingSlotsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parking slots created successfully via bulk operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/parking-slots/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/IdPathParamUuid"
                }
            ],
            "get": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Get parking slot by ID (Admin/User)",
                "description": "Retrieves details of a specific parking slot. Requires 'view_all_parking_slots' or 'view_available_parking_slots' permission.",
                "operationId": "getParkingSlotById",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking slot details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlot"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Update parking slot by ID (Admin)",
                "description": "Updates details of a specific parking slot. Requires ADMIN role and 'manage_parking_slots' permission.",
                "operationId": "updateParkingSlot",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateParkingSlotRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parking slot updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "slot": {
                                            "$ref": "#/components/schemas/ParkingSlot"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Parking Slots"
                ],
                "summary": "Delete parking slot by ID (Admin)",
                "description": "Deletes a specific parking slot. Requires ADMIN role and 'manage_parking_slots' permission.",
                "operationId": "deleteParkingSlot",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking slot deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error description"
                    }
                }
            },
            "Pagination": {
                "type": "object",
                "properties": {
                    "currentPage": {
                        "type": "integer",
                        "example": 1
                    },
                    "totalPages": {
                        "type": "integer",
                        "example": 5
                    },
                    "totalItems": {
                        "type": "integer",
                        "example": 42
                    },
                    "itemsPerPage": {
                        "type": "integer",
                        "example": 10
                    }
                }
            },
            "VehicleTypeEnum": {
                "type": "string",
                "enum": [
                    "CAR",
                    "MOTORCYCLE",
                    "TRUCK",
                    "BICYCLE"
                ]
            },
            "VehicleSizeEnum": {
                "type": "string",
                "enum": [
                    "SMALL",
                    "MEDIUM",
                    "LARGE",
                    "EXTRA_LARGE"
                ]
            },
            "ParkingSlotStatusEnum": {
                "type": "string",
                "enum": [
                    "AVAILABLE",
                    "UNAVAILABLE",
                    "MAINTENANCE"
                ]
            },
            "SlotLocationEnum": {
                "type": "string",
                "enum": [
                    "NORTH_WING",
                    "SOUTH_WING",
                    "EAST_WING",
                    "WEST_WING",
                    "LEVEL_1",
                    "LEVEL_2"
                ]
            },
            "ParkingSlot": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                    },
                    "slot_number": {
                        "type": "string",
                        "example": "A101"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum",
                        "example": "MEDIUM"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum",
                        "example": "CAR"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ParkingSlotStatusEnum",
                        "example": "AVAILABLE"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum",
                        "nullable": true,
                        "example": "LEVEL_1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateParkingSlotRequest": {
                "type": "object",
                "required": [
                    "slot_number",
                    "size",
                    "vehicle_type"
                ],
                "properties": {
                    "slot_number": {
                        "type": "string",
                        "example": "B205",
                        "description": "Unique slot identifier (2-10 chars, A-Z, 0-9, -)"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum",
                        "example": "SMALL"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum",
                        "example": "MOTORCYCLE"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum",
                        "nullable": true,
                        "example": "EAST_WING"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ParkingSlotStatusEnum",
                        "example": "AVAILABLE",
                        "default": "AVAILABLE"
                    }
                }
            },
            "UpdateParkingSlotRequest": {
                "type": "object",
                "properties": {
                    "slot_number": {
                        "type": "string",
                        "example": "B205-UPDATED"
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/ParkingSlotStatusEnum"
                    }
                }
            },
            "BulkCreateParkingSlotsRequest": {
                "type": "object",
                "required": [
                    "count",
                    "size",
                    "vehicle_type"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 10,
                        "minimum": 1,
                        "maximum": 500
                    },
                    "prefix": {
                        "type": "string",
                        "example": "L2-S",
                        "default": "PS"
                    },
                    "startNumber": {
                        "type": "integer",
                        "example": 1,
                        "default": 1
                    },
                    "size": {
                        "$ref": "#/components/schemas/VehicleSizeEnum",
                        "example": "MEDIUM"
                    },
                    "vehicle_type": {
                        "$ref": "#/components/schemas/VehicleTypeEnum",
                        "example": "CAR"
                    },
                    "location": {
                        "$ref": "#/components/schemas/SlotLocationEnum",
                        "nullable": true,
                        "example": "LEVEL_2"
                    }
                }
            },
            "ParkingSlotListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParkingSlot"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            }
        },
        "parameters": {
            "IdPathParamUuid": {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "UUID Identifier of the resource",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "PageQueryParam": {
                "name": "page",
                "in": "query",
                "description": "Page number",
                "schema": {
                    "type": "integer",
                    "default": 1,
                    "minimum": 1
                }
            },
            "LimitQueryParam": {
                "name": "limit",
                "in": "query",
                "description": "Items per page",
                "schema": {
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "OrderQueryParam": {
                "name": "order",
                "in": "query",
                "description": "Sort order",
                "schema": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "asc"
                }
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Unauthorized.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "ForbiddenError": {
                "description": "Forbidden.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "NotFoundError": {
                "description": "Not Found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "BadRequestError": {
                "description": "Bad Request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal Server Error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            }
        }
    }
}